{"version":3,"sources":["component/card/card.component.js","component/card-list/card-list-component.js","component/search-box/search-box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","idx","SearchBox","placeholder","handleChange","count","resultString","undefined","type","onChange","App","state","searchVal","doSearch","bind","fetch","then","response","json","users","setState","catch","e","console","log","ev","this","target","value","filteredMonsters","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCMPC,EAZE,SAACR,GAChB,OACE,8BACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,EAASO,GAAV,OAClB,cAAC,EAAD,CAAgBP,QAASA,GAAdO,WCLRC,G,MAAY,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MAC/CC,OAA6BC,IAAd,CAAEF,SAAF,UAA6BA,EAA7B,UAA6C,GAClE,OACE,gCACE,uBACEG,KAAK,SACLjB,UAAU,SACVY,YAAaA,EACbM,SAAUL,IAEZ,oBAAGT,GAAG,aAAN,UAAoBW,EAApB,YC+BSI,E,kDAtCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CAAEZ,SAAU,GAAIa,UAAW,IACxC,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAHJ,E,qDAMd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAErB,SAAUoB,OAC1CE,OAAM,SAACC,GACNC,QAAQC,IAAI,uB,sBAIlB,SAASC,GACPC,KAAKN,SAAS,CAAER,UAAWa,EAAGE,OAAOC,U,oBAGvC,WAAU,IAAD,SACyBF,KAAKf,MAA7BZ,EADD,EACCA,SAAUa,EADX,EACWA,UACZiB,EAAmB9B,EAAS+B,QAAO,SAACpC,GAAD,OACvCA,EAAQE,KAAKmC,cAAcC,SAASpB,EAAUmB,kBAEhD,OACE,sBAAKxC,UAAU,MAAf,UACE,0CACA,cAAC,EAAD,CACEY,YAAY,iBACZC,aAAc,SAACqB,GAAD,OAAQ,EAAKZ,SAASY,IACpCpB,MAAOwB,EAAiBI,SAE1B,cAAC,EAAD,CAAUlC,SAAU8B,W,GAjCVK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dd02f75d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n  <div className='card-container'>\r\n    <img\r\n      alt='monster'\r\n      src={`https://robohash.org/${props.monster.id}?set=set3&size=180x180`}\r\n    />\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div>\r\n      <div className='card-list'>\r\n        {props.monsters.map((monster, idx) => (\r\n          <Card key={idx} monster={monster}></Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange, count }) => {\r\n  const resultString = { count } !== undefined ? `${count} found` : '';\r\n  return (\r\n    <div>\r\n      <input\r\n        type='search'\r\n        className='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n      />\r\n      <p id='list-count'>{resultString} </p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n// import { monsters } from './sharedData';\r\nimport CardList from './component/card-list/card-list-component';\r\nimport { SearchBox } from './component/search-box/search-box.component';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { monsters: [], searchVal: '' };\r\n    this.doSearch = this.doSearch.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ monsters: users }))\r\n      .catch((e) => {\r\n        console.log('error on fetch');\r\n      });\r\n  }\r\n\r\n  doSearch(ev) {\r\n    this.setState({ searchVal: ev.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { monsters, searchVal } = this.state;\r\n    const filteredMonsters = monsters.filter((monster) =>\r\n      monster.name.toLowerCase().includes(searchVal.toLowerCase())\r\n    );\r\n    return (\r\n      <div className='App'>\r\n        <h1>monzydex</h1>\r\n        <SearchBox\r\n          placeholder='Search The Dex'\r\n          handleChange={(ev) => this.doSearch(ev)}\r\n          count={filteredMonsters.length}\r\n        />\r\n        <CardList monsters={filteredMonsters}></CardList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}